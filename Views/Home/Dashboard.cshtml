@model BugTracksV3.Models.ViewModels.DashboardViewModel

@using BugTracksV3.Services.Interfaces
@using BugTracksV3.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@using BugTracksV3.Models.Enums

@*@inject UserManager<ApplicationUser> UserManager*@
@inject IBTRolesService RolesService
@inject IBTProjectService ProjectService

@{
	ViewData["Title"] = "Dashboard";
	//ApplicationUser btUser = await UserManager.GetUserAsync(User);
	//string imgSize = "50px";
	Random dice = new();
}

<!-- Styles -->
<style>
	.amDark {
		background-color: #30303d;
		color: #fff;
	}

	#chartdiv {
		width: 100%;
		height: 500px;
	}
</style>

<!-- DashBoard Header-->
<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">@ViewData["Title"]</h1>
			</div><!-- /.col -->
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a href="#">Home</a></li>
					<li class="breadcrumb-item active">@ViewData["Title"]</li>
				</ol>
			</div>
		</div>
	</div>
</div>

<!-- Dashboard -->
<div class="content">
	<div class="container-fluid">

		<!-- Banners -->
		<div class="row">

			<!-- Projects -->
			<div class="col-lg-3 col-6">
				<div class="small-box bg-info">
					<div class="inner">
						<h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
						<p>Active Projects</p>

						<div class="icon">
							<i class="fas fa-book"></i>							
						</div>
					</div>					

					@if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
					{
						<a asp-action="AllProjects" asp-controller="Projects" class="small-box-footer">All Projects<i class="ml-2 fas fa-arrow-circle-right"></i></a>
					}
					else
					{
						<a asp-action="MyProjects" asp-controller="Projects" class="small-box-footer">My Projects<i class="ml-2 fas fa-arrow-circle-right"></i></a>
					}
				</div>
			</div>

			<!-- Tickets -->
			<div class="col-lg-3 col-6">
				<div class="small-box bg-success">
					<div class="inner">
						<h3>@Model.Tickets.Count()</h3>
						<p>Total Tickets</p>
						<div class="icon">
							<i class="fas fa-copy"></i>
						</div>
					</div>
					<a asp-action="AllTickets" asp-controller="Tickets" class="small-box-footer">All Tickets<i class="ml-2 fas fa-arrow-circle-right"></i></a>
				</div>
			</div>

			<!-- Unassigned Tickets -->
			<div class="col-lg-3 col-6">
				<div class="small-box bg-warning">
					<div class="inner">
						<h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
						<p>Unassigned Tickets</p>
						<div class="icon">
							<i class="ion ion-pie-graph"></i>
						</div>
					</div>
					<a asp-action="AllTickets" asp-controller="Tickets" class="small-box-footer">All Unassigned Tickets<i class="ml-2 fas fa-arrow-circle-right"></i></a>
				</div>
			</div>

			<!-- Members -->
			<div class="col-lg-3 col-6">
				<div class="small-box bg-danger">
					<div class="inner">
						<h3>@(Model.Members.Count())</h3>
						<p>Total Members</p>
						<div class="icon">
							<i class="ion ion-person-add"></i>
						</div>
					</div>
					<a asp-action="" asp-controller="" class="small-box-footer">All Members<i class="ml-2 fas fa-arrow-circle-right"></i></a>
				</div>
			</div>


		</div>
	</div>

		<!-- Information -->
		<div class="row">

			<section class="col-lg-7 connectedSortable">
				<!-- Card Header -->

				<!-- PROJECTS -->
				<div class="card" id="Projects">
					<div class="card-header border-transparent">
						<h3 class="card-title">
							<i class="fas fa-chart-pie mr-1"></i>
							Projects
						</h3>
						<!-- Card Tools -->
						<div class="card-tools">
							<button class="btn btn-tool" type="button" data-card-widget="collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>				
					</div>
					<!-- Card Body -->
					<div class="card-body p-0">
						<div class="table-responsive">
							<table class="table m-0">
								<thead>
									<tr>
										<th>Project</th>
										<th>Description</th>
										<th>Members</th>
										<th>Progress</th>
										<th class="text-center">Actions</th>
									</tr>
								</thead>
								<tbody>
								<tbody>
									@foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
									{
									<tr>
										<!-- Name -->
										<td>@project.Name</td>

										<!-- Description -->
										<td>
											<div class="description">
												@project.Description
											</div>
										</td>

										<!-- Members -->
										<td>Members</td>

										<!-- Progress -->
										<td class="">
											<div class="progress progress-sm">
												<div class="progress-bar bg-success" style="width: @dice.Next(1, 100)%;"></div>
											</div>
										</td>

										<!-- Actions -->
										<td>
											<div class="d-flex justify-content-center i-gap">
												<a asp-action="Edit" asp-controller="Projects" asp-route-id="@project.Id">
													<i class="far fa-edit text-info"></i>
												</a>
												<a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id">
													<i class="fas fa-folder-open text-success"></i>
												</a>
												<a asp-action="Archive" asp-controller="Projects">
													<i class="fas fa-archive text-warning"></i>
												</a>
											</div>
										</td>
									</tr>
								}
								</tbody>
							</table>
						</div>
					</div>
					<!-- Card Footer -->
					<div class="card-footer clearfix">
						<a asp-controller="Projects" asp-action="Create" class="btn btn-sm btn-info float-left">Create New Project</a>
						@if(User.IsInRole(nameof(Roles.Admin)))
						{
						<a asp-area="" asp-action="AllProjects" asp-controller="Projects" class="btn btn-sm btn-secondary float-right">View All Projects</a>
						}
						else
						{
							<a asp-area="" asp-action="MyProjects" asp-controller="Projects" class="btn btn-sm btn-secondary float-right">View My Projects</a>
						}
					</div>
				</div>

				<!-- Tickets -->
				<div class="card" id="Tickets">
					<div class="card-header border-transparent">
						<h3 class="card-title">
							<i class="fas fa-copy mr-1"></i>
							Tickets
						</h3>
						<!-- Card Tools -->
						<div class="card-tools">
							<button class="btn btn-tool" type="button" data-card-widget="collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>				
					</div>
					<!-- Card Body -->
					<div class="card-body p-0">
						<div class="table-responsive">
							<table class="table m-0">
								<thead>
									<tr>
										<th>Ticket</th>
										<th class="text-center">Developer</th>
										<th class="text-center">Status</th>
										<th>Priority</th>
										<th class="text-center">Actions</th>
									</tr>
								</thead>

								<tbody>
									@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.DateCreated))
									{
									<tr>
										<!-- Name -->
										<td>@ticket.Title</td>

										<!-- Members -->
										<td>
											<div class="d-flex justify-content-center">
												<img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="User Image" class="media-object rounded-circle" style="width: 40px;" />
											</div>
										</td>

										<!-- Status -->
										<td class="text-center">
											@if (ticket.TicketStatus.Name == "New")
											{
												<span class="badge badge-success">@ticket.TicketStatus.Name</span>
											}
											else
											{
												<span class="badge text-secondary">@ticket.TicketStatus.Name</span>
											}
										</td>

										<!-- Priority -->
										<td class="text-center">
											@if (ticket.TicketPriority.Name == "Low")
											{
												<span class="badge text-secondary">@ticket.TicketPriority.Name</span>
											}
											else if (ticket.TicketPriority.Name == "Medium")
											{
												<span class="badge badge-primary">@ticket.TicketPriority.Name</span>
											}
											else if (ticket.TicketPriority.Name == "High")
											{
												<span class="badge badge-warning">@ticket.TicketPriority.Name</span>
											}
											else if (ticket.TicketPriority.Name == "Urgent")
											{
												<span class="badge badge-danger">@ticket.TicketPriority.Name</span>
											}
										</td>

										<!-- Actions -->
										<td>
											<div class="d-flex justify-content-center i-gap">
												<a asp-action="Edit" asp-controller="Projects" asp-route-id="@ticket.Id">
													<i class="far fa-edit text-info"></i>
												</a>
												<a asp-action="Details" asp-controller="Projects" asp-route-id="@ticket.Id">
													<i class="fas fa-folder-open text-success"></i>
												</a>
												<a asp-action="Archive" asp-controller="Projects">
													<i class="fas fa-archive text-warning"></i>
												</a>
											</div>
										</td>
									</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
					<!-- Card Footer -->
					<div class="card-footer clearfix">
						<a asp-controller="Projects" asp-action="Create" class="btn btn-sm btn-info float-left">Create New Project</a>
						@if(User.IsInRole(nameof(Roles.Admin)))
						{
						<a asp-area="" asp-action="AllProjects" asp-controller="Projects" class="btn btn-sm btn-secondary float-right">View All Tickets</a>
						}
						else
						{
							<a asp-area="" asp-action="MyProjects" asp-controller="Projects" class="btn btn-sm btn-secondary float-right">View My Tickets</a>
						}
					</div>
				</div>
			</section>

			<section class="col-lg-5 connectedSortable">

				<!-- MEMBERS -->
				<div class="card" id="Members">
					<!-- Header -->
					<div class="card-header">
						<h3 class="card-title">
							<i class="fas fa-users mr-1"></i>
							Members
						</h3>

						<div class="card-tools">
							<button class="btn btn-tool" type="button" data-card-widget="collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>
					</div>

					<!-- Body -->
					<div class="card-body p-0">
						<ul class="users-list">
						@foreach (ApplicationUser member in Model.Members)
						{
							<li class="d-flex flex-column align-content-center flex-wrap">
								<img src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="User Image" class="media-object rounded-circle" style="width: 128px;" />
								<div>
									@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())
								</div>
								<div>
									@member.FirstName
								</div>
							</li>
						}
						</ul>
					</div>

					<!-- Footer -->
					@if(User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
					{
					<div class="card-footer">
						<a asp-area="" asp-action="" asp-controller="" class="btn btn-sm btn-primary float-left">Invite Member</a>

						
						<a asp-area="" asp-action="" asp-controller="" class="btn btn-sm btn-secondary float-right">View All Members</a>
					</div>	
					}
					else
					{
					<div class="card-footer text-center">
						<a asp-area="" asp-action="" asp-controller="">View All Members</a>
					</div>
					}
				</div>

			</section>
		</div>
</div>

<div>
	<div classxfont-weighteighteightgetainer-fluid">
		<!-- Info Pills -->
		@*Charts*@
		<div class="row gy-2">
			<div class="col-md-12 col">
				<div class="row col-cols-4 mt-5 bg-secondary">
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Projects by Priority</h5>
							<p>[Google Charts]</p>
							<div id="chart3D"></div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Project Tickets Count (%)</h5>
							<p>[Google Charts]</p>
							<div id="donut"></div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Tickets by Priority</h5>
							<p>[Morris Charts]</p>
							<!-- Morris: Donut -->
							<div class="col-md-12">
								<div id="legend" class="donut-legend" style="font-size:x-small"></div>
							</div>
							<div class="col-md-12">
								<div class="chart chart-md" id="morrisTicketPriority"></div>
							</div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Tickets by Status</h5>
							<p>[ChartJS]</p>
							<!-- ChartJS: Pie/Doughnut -->
							<div class="col-md-12">
								<!--  Chart.js Canvas Tag -->
								<canvas id="donutChart"></canvas>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row gy-2">
		<div class="col mt-5 bg-secondary">
			<div class="card col m-1 p-2">
				<div class="card-body" style="height:600px">
					<h5>Project: Tickets vs Developers</h5>
					<p>[amCharts]</p>
					<!-- HTML -->
					<div id="chartdiv"></div>
				</div>
			</div>
		</div>
	</div>
	<div class="row gy-2">
		<div class="col mt-5 bg-secondary">
			<div class="card col m-1 p-2">
				<div class="card-body" style="height:600px;overflow-y:auto;">
					<h5>Project: Tickets vs Developers</h5>
					<p>[Plotly]</p>
					<!-- HTML -->
					<div id="plotlyChart"></div>
				</div>
			</div>
		</div>
	</div>
</div>
<hr />
<div class="mt-5 ">
	<div class="row">
		@* Projects Table *@
		<div class="col">
			<div class="bg-secondary">
				<div class="card m-1 p-2">
					<div class="card-header">
						<h2>Projects</h2>
					</div>
					<div class="card-body">
						<div class="table-responsive" style="overflow-y:auto;height:600px;">
							<table class="table table-hover">
								<thead class="">
									<tr>
										<th>Name</th>
										<th>Start Date</th>
										<th>End Date</th>
										<th>Priority</th>
										<th>Action</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
									{
										<tr>
											<td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black"><strong>@project.Name</strong></a></td>
											<td><span style="font-size:small">@project.StartDate.ToString("yyyy/MMM/dd")</span></td>
											<td><span style="font-size:small">@project.EndDate.ToString("yyyy/MMM/dd")</span></td>
											<td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>
											<td>
												<a class="btn btn-primary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
					<div class="card-footer">
					</div>
				</div>
			</div>
		</div>

		@* Tickets Table *@
		<div class="col">
			<div class="bg-secondary">
				<div class="card m-1 p-2">
					<div class="card-header">
						<h2>Tickets</h2>
					</div>
					<div class="card-body">
						<div class="table-responsive" style="overflow-y:auto;height:600px;">
							<table class="table table-hover">
								<thead class="">
									<tr>
										<th>Title</th>
										<th>Developer</th>
										<th>Status</th>
										<th>Priority</th>
										<th>Date</th>
										<th>Action</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.DateCreated))
									{
										<tr>
											<td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
											<td>
												@if (ticket.DeveloperUserId != null)
												{
													@ticket.DeveloperUser?.FullName
												}
												else
												{
													<span class="badge bg-warning text-dark">Unassigned</span>
												}
											</td>
											@if (ticket.TicketStatus.Name == "New")
											{
												<td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
											}
											else
											{
												<td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name </span></td>
											}
											<td><span class="badge bg-dark rounded-pill">@ticket.TicketPriority.Name </span></td>
											<td>@ticket.DateCreated.ToString("MM-dd-yyyy")</td>
											<td>
												<a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
					<div class="card-footer">
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@section scripts{
<!--Google Charts-->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
	google.load("visualization", "1", { packages: ["corechart"] });
	google.setOnLoadCallback(drawChart);
	function drawChart() {
		$.ajax({
			type: "POST",
			url: "/Home/GglProjectPriority",
			data: '{}',
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				var data = google.visualization.arrayToDataTable(result);
				//3D Pie
				var options = {
					title: 'Project Priority',
					is3D: true,
					chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
					legend: { position: 'bottom' }
				};
				var chart = new google.visualization.PieChart($("#chart3D")[0]);
				chart.draw(data, options);
			},
			failure: function (rresult) {
				alert(result.d);
			},
			error: function (result) {
				alert(result.d);
			}
		});
	}
</script>
<script type="text/javascript">
	google.load("visualization", "1", { packages: ["corechart"] });
	google.setOnLoadCallback(drawChart);
	function drawChart() {
		$.ajax({
			type: "POST",
			url: "/Home/GglProjectPriority",
			data: '{}',
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				var data = google.visualization.arrayToDataTable(result);
				//Donut
				var options = {
					title: 'Company Ticket Distribution',
					pieHole: 0.3,
					chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
					legend: { position: 'bottom' }
				};
				var chart = new google.visualization.PieChart($("#donut")[0]);
				chart.draw(data, options);
			},
			failure: function (rresult) {
				alert(result.d);
			},
			error: function (result) {
				alert(result.d);
			}
		});
	}
</script>
@* Morris Donut Chart *@
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
<script>
	var morrisDonutData = [{
		label: "Low",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
	}, {
		label: "Medium",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
	}, {
		label: "High",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
	}, {
		label: "Urgent",
		value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
	}];
	/*
	Morris: Donut
	*/
	if ($('#morrisTicketPriority').get(0)) {
		var donutChart = Morris.Donut({
			resize: true,
			element: 'morrisTicketPriority',
			data: morrisDonutData,
			colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
		});
		donutChart.options.data.forEach(function(label, i) {
			var legendItem = $('<span></span>').text( label['label'] + ": " +label['value']).prepend('<span>&nbsp;</span>');
			legendItem.find('span')
			  .css('backgroundColor', donutChart.options.colors[i])
			  .css('width', '20px')
			  .css('display', 'inline-block')
			  .css('margin', '10px');
			$('#legend').append(legendItem)
		});
	};
</script>
<!-- *** Begin Chart JS Pie/Donut *** -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
<script>
	var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
	var donutData = {
		labels: [
			'@nameof(BTTicketStatus.Development)',
			'@nameof(BTTicketStatus.New)',
			'@nameof(BTTicketStatus.Resolved)',
			'@nameof(BTTicketStatus.Testing)'
		],
		datasets: [
			{
				data: [
					@Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(BTTicketStatus.New)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(BTTicketStatus.Resolved)).Count(),
					@Model.Tickets.Where(t=> t.TicketStatus.Name ==nameof(BTTicketStatus.Testing)).Count()
				],
				backgroundColor: [
					'rgba(255, 99, 132, 0.2)',
					'rgba(54, 162, 235, 0.2)',
					'rgba(255, 206, 86, 0.2)',
					'rgba(75, 192, 192, 0.2)'
				],
				borderColor: [
					'rgba(255, 99, 132, 1)',
					'rgba(54, 162, 235, 1)',
					'rgba(255, 206, 86, 1)',
					'rgba(75, 192, 192, 1)'
				]
			}
		]
	};
	var donutOptions = {
		maintainAspectRatio: false,
		responsive: true,
	};
	//Create pie or donut chart
	// You can switch between pie and donut using the method below.
	new Chart(donutChartCanvas, {
		type: 'doughnut',
		data: donutData,
		options: donutOptions
	});
</script>
<!-- *** Begin AM Charts *** -->
<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<!-- Chart code -->
<script>
	$.ajax({
		type: "POST",
		url: "/Home/AmCharts",
		data: '{}',
		contentType: "application/json; charset=utf-8",
		dataType: "json",
		success: function (result) {
			am4core.ready(function() {
				// Themes begin
				// Themes end
				 // Create chart instance
				var chart = am4core.create("chartdiv", am4charts.XYChart);
				// Add data
				chart.data = result;
				// Create axes
				var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
				categoryAxis.dataFields.category = "project";
				categoryAxis.numberFormatter.numberFormat = "#";
				categoryAxis.renderer.inversed = true;
				categoryAxis.renderer.grid.template.location = 0;
				categoryAxis.renderer.cellStartLocation = 0.1;
				categoryAxis.renderer.cellEndLocation = 0.9;
				var  valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
				valueAxis.renderer.opposite = true;
				// Create series
				function createSeries(field, name) {
				  var series = chart.series.push(new am4charts.ColumnSeries());
				  series.dataFields.valueX = field;
				  series.dataFields.categoryY = "project";
				  series.name = name;
				  series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
				  series.columns.template.height = am4core.percent(100);
				  series.sequencedInterpolation = true;
				  var valueLabel = series.bullets.push(new am4charts.LabelBullet());
				  valueLabel.label.text = "{valueX}";
				  valueLabel.label.horizontalCenter = "left";
				  valueLabel.label.dx = 10;
				  valueLabel.label.hideOversized = false;
				  valueLabel.label.truncate = false;
				  var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
				  categoryLabel.label.text = "{name}";
				  categoryLabel.label.horizontalCenter = "right";
				  categoryLabel.label.dx = -10;
				  categoryLabel.label.fill = am4core.color("#fff");
				  categoryLabel.label.hideOversized = false;
				  categoryLabel.label.truncate = false;
				}
				createSeries("tickets", "Tickets");
				createSeries("developers", "Devs");
			}); // end am4core.ready()
		},
		failure: function (result) {
			alert(result.d);
		},
		error: function (result) {
			alert(result.d);
		}
	});
</script>
<!--  Plotly Charts  -->
<!-- Load plotly.js into the DOM -->
<script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
<script>
	$.ajax({
		type: "POST",
		url: "/Home/PlotlyBarChart",
		data: '{}',
		contentType: "application/json; charset=utf-8",
		dataType: "json",
		success: function (result) {
			var data = result;
			var layout = {barmode: 'group'};
			Plotly.newPlot('plotlyChart', data, layout);
			},
			failure: function (result) {
				alert(result.d);
			},
			error: function (result) {
				alert(result.d);
			}
		});
</script>
}